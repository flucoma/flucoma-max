name: release
on:
  workflow_dispatch:

jobs:          
  winbuild:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: flucoma/actions/env@main
      - uses: flucoma/actions/max@main
        with:
          branch: origin/${{ github.ref_name }}

      - uses: actions/upload-artifact@v3
        with:
          name: winbuild
          path: "release-packaging/FluidCorpusManipulation/externals/"
  
  macbuild:
    runs-on: macos-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - uses: flucoma/actions/env@main
      - uses: flucoma/actions/max@main
        with:
          branch: origin/${{ github.ref_name }}

      - name: sign and notarise
        uses: flucoma/actions/distribution@main
        with:
          glob: '-e mxo'
          package: 'release-packaging'
          output_type: 'bundle'
          cert: ${{ secrets.CERT }}
          certpwd: ${{ secrets.CERTPWD }}
          teamid: ${{ secrets.WWDRTEAMID }}
          apppwd: ${{ secrets.APPSTORECONNECTPWD }}
          appusr: ${{ secrets.APPSTORECONNECTUSERNAME }}

      - uses: actions/upload-artifact@v3
        with:
          name: macbuild
          path: release-packaging/FluidCorpusManipulation/

      - id: get-version
        run: echo "version=$(cat flucoma.version.rc)" >> $GITHUB_OUTPUT
        working-directory: build/_deps/flucoma-core-src
  
  release:
    runs-on: ubuntu-latest
    needs: [winbuild, macbuild]

    steps:
      - name: make parent folder
        run : mkdir -p "FluidCorpusManipulation"

      - uses: actions/download-artifact@v3
        with:
          name: macbuild
          path: "FluidCorpusManipulation"

      - uses: actions/download-artifact@v3
        with:
          name: winbuild
          path: "FluidCorpusManipulation/externals"
      
      - name: zip
        run: zip -r FluCoMa-Max-"${{ needs.macbuild.outputs.version }}".zip "FluidCorpusManipulation"
      
      - name: delete pre-existing release
        uses: dev-drprasad/delete-tag-and-release@v0.2.1
        with:
          delete_release: true # default: false
          tag_name: ${{ needs.macbuild.outputs.version }} # tag name to delete
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: package and upload
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.macbuild.outputs.version }}
          body: "This is a release build of the FluCoMa Max package. The build hash is ${{ github.sha }}"
          files: FluCoMa*
          prerelease: true
          tag_name: ${{ needs.macbuild.outputs.version }}
          target_commitish: ${{ github.sha }}
          draft: false
